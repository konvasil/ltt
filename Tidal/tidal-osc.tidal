let speedPat = cP "speed" :: Pattern Double

d1 $ jux (rev) $ stack [
  sound (samples "beat*2" (run 12)),
  cat[sound "alva*2" # gain 0.75,
      sound (samples "alva*4" (irand 12)) # speed (speedPat |/20),
      sound (samples "glitch*4" (irand 12)) # speed (speedPat |/20),
      sound (samples "glitch*4" (irand 12)) # speed (speedPat |/20),
      sound (samples "alva*4" (irand 12)) # speed (speedPat |/20)
     ]
  ]
  # nudge (-0.25)
  # pan "0 1"
  # nudge (-0.05)
  # speed (speedPat |*20) --osc message comes as pattern from variable on top
  # gain 0.99
  # cutoff (range 100 1680 $ perlin)
  # unit "c"

  panic
